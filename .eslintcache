[{"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\index.js":"1","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\App.js":"2","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\reportWebVitals.js":"3","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\index.js":"4","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\RouterShield\\index.js":"5","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\api\\user.js":"6","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\Jurisdiction.js":"7","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\request.js":"8","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\Cookie.js":"9","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\index.js":"10","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\utils.js":"11","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\reducer.js":"12","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\action-type.js":"13","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\action.js":"14","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\interface\\User\\index.js":"15","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\Login\\index.js":"16","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\Index\\index.js":"17","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\HeaderBar\\index.js":"18","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\action.js":"19","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\action-type.js":"20","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\reducer.js":"21","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\SiderNav\\index.js":"22","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\NavigationOptions\\index.js":"23","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\ContentMain\\index.js":"24","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\HomePage\\index.js":"25","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\ProductManage\\index.js":"26","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\api\\product.js":"27","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\interface\\Product\\index.js":"28"},{"size":946,"mtime":1612676234941,"results":"29","hashOfConfig":"30"},{"size":464,"mtime":1612831141801,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1612141752589,"results":"32","hashOfConfig":"30"},{"size":330,"mtime":1612851037509,"results":"33","hashOfConfig":"30"},{"size":441,"mtime":1612235075628,"results":"34","hashOfConfig":"30"},{"size":594,"mtime":1612830722111,"results":"35","hashOfConfig":"30"},{"size":129,"mtime":1612831206953,"results":"36","hashOfConfig":"30"},{"size":1171,"mtime":1612765908649,"results":"37","hashOfConfig":"30"},{"size":1080,"mtime":1612233182663,"results":"38","hashOfConfig":"30"},{"size":278,"mtime":1614066442339,"results":"39","hashOfConfig":"30"},{"size":705,"mtime":1614066694634,"results":"40","hashOfConfig":"30"},{"size":339,"mtime":1612851163927,"results":"41","hashOfConfig":"30"},{"size":201,"mtime":1612753917972,"results":"42","hashOfConfig":"30"},{"size":188,"mtime":1612762904525,"results":"43","hashOfConfig":"30"},{"size":717,"mtime":1614065652501,"results":"44","hashOfConfig":"30"},{"size":5909,"mtime":1612851160645,"results":"45","hashOfConfig":"30"},{"size":1582,"mtime":1613632686935,"results":"46","hashOfConfig":"30"},{"size":2641,"mtime":1613614625114,"results":"47","hashOfConfig":"30"},{"size":182,"mtime":1612852410723,"results":"48","hashOfConfig":"49"},{"size":69,"mtime":1613612161349,"results":"50","hashOfConfig":"30"},{"size":323,"mtime":1612852815469,"results":"51","hashOfConfig":"30"},{"size":906,"mtime":1614067509184,"results":"52","hashOfConfig":"30"},{"size":3848,"mtime":1614054335889,"results":"53","hashOfConfig":"30"},{"size":740,"mtime":1614054719521,"results":"54","hashOfConfig":"30"},{"size":1648,"mtime":1614154987094,"results":"55","hashOfConfig":"30"},{"size":3644,"mtime":1614148992607,"results":"56","hashOfConfig":"30"},{"size":443,"mtime":1614065200770,"results":"57","hashOfConfig":"30"},{"size":368,"mtime":1614066690400,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"apw5ym",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"161216d",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\index.js",[],["123","124"],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\App.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\reportWebVitals.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\RouterShield\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\api\\user.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\Jurisdiction.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\request.js",["125"],"import axios from 'axios'\nimport { message } from 'antd';\n\n\nconst service = axios.create({\n    baseURL:process.env.REACT_APP_URL_BASE,//process.env.REACT_APP_URL_BASE\n    timeout:5000,\n    headers:{\n        \"post\":{\n            \"Content-Type\":\"application/x-www-form-urlencoded\",\n        }\n    }\n})\n\n//request interceptor\nservice.interceptors.request.use(\n    config => {\n        if(config.method == 'post'){\n            let oldData = config.data\n            let arr = []\n            for(let key in oldData){\n              let str = ''\n              str = key+'='+oldData[key]\n              arr.push(str);\n            }\n            let argumentes = arr.join('&');\n            config.data = argumentes\n          }\n          return config;\n       },\n       error => {\n        return Promise.reject(error)\n       }\n)\n//response interceptor\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        if(res.errorCode !== 0){\n            message.error(res.message)\n            return Promise.reject(res)\n        }else{\n          return res\n        }\n    },\n    error => {\n        return Promise.reject(error)\n    }\n)\n\nexport default service","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\utils\\Cookie.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\utils.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\reducer.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\action-type.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\Login\\action.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\interface\\User\\index.js",["126","127"],"import {decodeParam} from \"../../utils\";\nconst Mock = require('mockjs')\n\n\nconst login = Mock.mock(require('./userLoginSuccess.json'))\nconst login_fail = Mock.mock(require('./userLoginFail.json'))\nconst userInfo = Mock.mock(require('./getUserInfoSuccess.json'))\n\n// export default {\n//   login,\n// }\nexport default  [\n  {\n    url: '/user/login/',\n    type: 'post',\n    response: config => {\n      const { serial_code,password } = decodeParam(config.body)\n      if(serial_code === '12531' && password === '12531'){\n       return login\n      }else{\n        return login_fail\n      }\n      \n    }\n  },\n  {\n    url:RegExp('/user/info/' + \".*\"),\n    type:'get',\n    response: config => {\n      return userInfo\n    }\n  }\n]\n\n","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\Login\\index.js",["128","129"],"import React from 'react'\nimport './style.css'\nimport { Form, Input, Button, Checkbox,Popconfirm,message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport propTypes from 'prop-types';\nimport { saveUserDate } from \"@/store/Login/action\";\nimport { setCookies } from \"../../utils/Cookie\";\nimport { login,getUserInfo } from '../../api/user';\nimport { connect } from 'react-redux';\n\nconst loginKey = 'updatable';\n\nclass Login extends React.Component {\n    static propTypes  = {\n        userInfo: propTypes.object.isRequired,\n        saveUserDate : propTypes.func.isRequired,\n    }\n    state = {\n        showBox:'login',\n        url:'',\n        loading:false,\n        text:{\n            forgetPwd:'请联系管理员！',\n            register:'请联系管理员开通！'\n        }\n    }\n    login = (values) => {\n        console.log('Received values of form: ', values);\n        message.loading({ content: '正在登录...', loginKey });\n        login(values.username,values.password)\n        .then((res)=>{\n            getUserInfo(values.username,values.password)\n            .then((res)=>{\n                    if(values.remember){\n                        //保存到cookie\n                        setCookies(process.env.REACT_APP_TOKEN_NAME,res.item,7)\n                        this.props.saveUserDate(res.item,\"userInfo\")\n                        message.success({ content: '登录成功!', loginKey, duration: 2 });\n                        this.props.history.push('/')\n                    }else{\n                        this.props.saveUserDate(res.item,\"userInfo\")\n                    }\n            })\n            .catch((err)=>{\n\n            })\n           \n        })\n        .catch((err)=>{\n           \n        })\n    };\n    forgetPwsConfirm = () => {\n    }\n    registerConfirm = () => {\n    }\n    //study life cycle\n    componentWillMount() {\n    }\n    render() {\n        return (\n            <div id='login-page' style={styles.page}>\n                <div>{JSON.stringify(this.props.userInfo)}</div>\n                <div className={'formContainer'}>\n                    <div className={\"inputBox\"}>\n                        <Form\n                            name=\"normal_login\"\n                            className=\"login-form\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={this.login}\n                        >\n                            <Form.Item\n                                name=\"username\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: '请输入用户名!',\n                                },\n                                ]}\n                            >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"password\"\n                                rules={[\n                                {\n                                    required: true,\n                                    message: '请输入密码!',\n                                },\n                                ]}\n                            >\n                                <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"密码\"\n                                />\n                            </Form.Item>\n                            \n                            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                <Checkbox>记住我</Checkbox>\n                            </Form.Item>\n                            <Form.Item>\n                                <Popconfirm\n                                    placement=\"right\"\n                                    title={this.state.text.forgetPwd}\n                                    onConfirm={this.forgetPwsConfirm}\n                                    okText=\"确定\"\n                                    cancelText=\"取消\"\n                                >\n                                <a className=\"login-form-forgot\" href=\"#\">\n                                    忘记密码\n                                </a>\n                                </Popconfirm>\n                                \n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                登录\n                                </Button>\n                                或者 \n                                <Popconfirm\n                                    placement=\"right\"\n                                    title={this.state.text.register}\n                                    onConfirm={this.registerConfirm}\n                                    okText=\"确定\"\n                                    cancelText=\"取消\"\n                                >\n                                <a href=\"#\">\n                                注册\n                                </a>\n                                </Popconfirm>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nconst styles = {\n    page:{\n        width:'100vw',\n        height:'100vh',\n        backgroundColor:\"#f5f5f6\",\n        border:'1px solid rgba(0,0,0,0)'\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        userInfo:state.Login.userInfo\n    }\n}\nexport default connect(mapStateToProps,{\n    saveUserDate\n})(Login)","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\Index\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\HeaderBar\\index.js",["130","131"],"import React, { Component } from 'react'\nimport propTypes from 'prop-types';\nimport { defaults } from 'js-cookie';\nimport { connect } from 'react-redux';\nimport { MenuFoldOutlined,MenuUnfoldOutlined,ShrinkOutlined,ArrowsAltOutlined } from '@ant-design/icons';\nimport screenfull from \"screenfull\";\nimport { message,Popover,Image } from 'antd';\nimport './index.css'\n\n\n\nclass HeaderBar extends Component {\n    static propTypes = {\n    }\n    state = {\n        iconSize:25,\n        screenFull:false,\n    }\n    changeCollapsed = () => {\n        this.props.onToggle()\n    }\n    changeScreenFull = () => {\n        if(screenfull.isEnabled){\n            screenfull.toggle()\n            this.setState({screenFull:!screenfull.isFullscreen})\n        }else{\n            message.error('您的浏览器不支持此功能！')\n        }\n    }\n    render() {\n        const userMenu = (\n            <div className=\"userMenu-container\">\n                <div>你好{'张辉'}</div>\n                <ul className=\"userMenu-ul\">\n                    <li>{'个人中心'}</li>\n                    <li>{'登出'}</li>\n                </ul>\n            </div>\n        )\n        return (\n            <div id=\"header-bar\">\n                <div className={'collapsed'} onClick={this.changeCollapsed}>\n                    {\n                        this.props.collapsed ?   (<MenuUnfoldOutlined style={{ fontSize: `${this.state.iconSize}px` }} />) : (<MenuFoldOutlined style={{ fontSize: `${this.state.iconSize}px` }}/>)\n                    }\n                </div>\n                \n                <div style={{lineHeight:'64px',float:'right'}}>\n                    <ul className={'header-ul'}>\n                        <li onClick={this.changeScreenFull}>\n                            {\n                                this.state.screenFull ? (<ShrinkOutlined style={{ fontSize: `${this.state.iconSize}px` }}/>) : (<ArrowsAltOutlined style={{ fontSize: `${this.state.iconSize}px` }}/>)\n                            }\n                        </li>\n                        <li>\n                            <Popover placement=\"bottomLeft\" content={userMenu}>\n                                <Image\n                                className={\"avatar\"}\n                                src=\"https://pic2.zhimg.com/80/v2-348bef3eeb80319ac07f2ab023cc086d_720w.jpg?source=1940ef5c\"\n                                />  \n                            </Popover>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\nexport default connect(mapStateToProps)(HeaderBar)\n","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\action.js",[],["132","133"],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\action-type.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\store\\HeaderBar\\reducer.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\SiderNav\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\NavigationOptions\\index.js",["134","135","136"],"import React, { Component } from 'react'\nimport {Link,withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Menu, Button } from 'antd';\nimport {\n  AppstoreOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n  MailOutlined,\n} from '@ant-design/icons';\n\n\nconst { SubMenu } = Menu;\n\nconst iconGroup = {\n    AppstoreOutlined:(<AppstoreOutlined/>),\n    MenuUnfoldOutlined:(<MenuUnfoldOutlined/>),\n    MenuFoldOutlined:(<MenuFoldOutlined/>),\n    PieChartOutlined:(<PieChartOutlined/>),\n    DesktopOutlined:(<DesktopOutlined/>),\n    ContainerOutlined:(<ContainerOutlined/>),\n    MailOutlined:(<MailOutlined/>)\n}\n\n@withRouter\nclass NavigationOption extends Component {\n    state = {\n        openKeys: [],\n        selectedKeys: []\n    }\n    componentDidMount(){\n        const pathname = this.props.location.pathname\n        const rank = pathname.split('/')\n        console.log(\"pathname\",pathname)\n        switch (rank.length) {\n            case 2 : \n                this.setState({\n                    selectedKeys: [pathname]\n                })\n                break;\n            case 5 :\n                this.setState({\n                  selectedKeys: [pathname],\n                  openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\n                })\n                break;\n            default:\n                this.setState({\n                    selectedKeys:[pathname],\n                    openKeys: [pathname.substr(0, pathname.lastIndexOf('/'))]\n                })\n        }\n    }\n    renderSubMenu = ({key,icon,title,subs}) => {\n        return (\n            <Menu.SubMenu key={key} title={\n                <span>\n                    {icon && iconGroup[icon]}\n                    <span>{title}</span>\n                </span>\n            }>\n                {\n                    subs && subs.map(item => {\n                        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n                    })\n                }\n            </Menu.SubMenu>\n        )\n    }\n    renderMenuItem = ({key,icon,title}) => {\n        return (\n            <Menu.Item key={key}>\n                <Link to={key}>\n                    { icon && iconGroup[icon] }\n                    <span>{title}</span>\n                </Link>\n            </Menu.Item>\n        )\n    }\n    onOpenChange = (openKeys) => {\n        console.log(\"点击导航\",openKeys)\n        if (openKeys.length === 0 || openKeys.length === 1) {\n            this.setState({\n              openKeys\n            })\n            return\n        }\n        const latestOpenKey = openKeys[openKeys.length - 1]\n        if (latestOpenKey.includes(openKeys[0])) {\n            this.setState({\n              openKeys\n            })\n          } else {\n            this.setState({\n              openKeys: [latestOpenKey]\n            })\n          }\n    }\n    render() {\n        const {openKeys,selectedKeys} = this.state\n        return (\n            <div>\n               <Menu \n               theme=\"dark\" \n               mode=\"inline\" \n               defaultSelectedKeys={['1']}\n               onClick={({key}) => this.setState({selectedKeys: [key]})}\n               openKeys={openKeys}\n               selectedKeys={selectedKeys}\n               onOpenChange={this.onOpenChange}\n               mode='inline'\n               >\n                    {\n                        this.props.menus && this.props.menus.map(item => {\n                            return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n                        })\n                    }\n                </Menu>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps)(NavigationOption)","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\components\\ContentMain\\index.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\HomePage\\index.js",["137","138","139"],"import { getCookies } from '../../utils/Cookie'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Table, Tag, Space } from 'antd';\nimport { func } from 'prop-types';\n\nconst columns = [\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: '名字',\n      dataIndex: 'userName',\n      key: 'userName',\n    },\n    {\n      title: '工号',\n      dataIndex: 'serialCode',\n      key: 'serialCode',\n    },\n    {\n        title: '联系方式',\n        dataIndex: 'mobile',\n        key: 'mobile',\n    },\n    {\n        title: '电子邮箱',\n        dataIndex: 'eMail',\n        key: 'eMail',\n    },\n    {\n        title: '工号',\n        dataIndex: 'serialCode',\n        key: 'serialCode',\n    },\n    {\n        title: '职位',\n        dataIndex: 'rule',\n        key: 'rule',\n        render:(text, record, index)=>{\n            let job = record.role.remark\n            return (\n                <div>{job}</div>\n            )\n        }\n    }\n  ];\n\n  const nuserData = []\n  nuserData.push(JSON.parse(getCookies(process.env.REACT_APP_TOKEN_NAME)))\n\nclass HomePage extends React.Component{\n    state={\n    }\n    componentDidMount(){\n    }\n    render(){\n        return (\n            <div>\n                <div>\n                    <span>个人信息</span>\n                    <div>\n                        <Table columns={columns} dataSource={nuserData} rowKey={columns => columns.id} pagination={false}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state)=>{\n    return {\n    }\n}\nexport default connect(mapStateToProps)(HomePage)","E:\\react\\react_pms_test\\react_test_of_PMS\\src\\pages\\ProductManage\\index.js",["140","141","142"],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\api\\product.js",[],"E:\\react\\react_pms_test\\react_test_of_PMS\\src\\mock\\interface\\Product\\index.js",["143","144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":18,"column":26,"nodeType":"153","messageId":"154","endLine":18,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":12,"column":1,"nodeType":"157","endLine":33,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":27,"column":30,"nodeType":"153","messageId":"160","endLine":27,"endColumn":31},{"ruleId":"161","severity":1,"message":"162","line":112,"column":33,"nodeType":"163","endLine":112,"endColumn":75},{"ruleId":"161","severity":1,"message":"162","line":131,"column":33,"nodeType":"163","endLine":131,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":17},{"ruleId":"164","severity":1,"message":"168","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":18},{"ruleId":"147","replacedBy":"169"},{"ruleId":"149","replacedBy":"170"},{"ruleId":"164","severity":1,"message":"171","line":4,"column":16,"nodeType":"166","messageId":"167","endLine":4,"endColumn":22},{"ruleId":"164","severity":1,"message":"172","line":16,"column":9,"nodeType":"166","messageId":"167","endLine":16,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":114,"column":16,"nodeType":"175","endLine":114,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":4,"column":17,"nodeType":"166","messageId":"167","endLine":4,"endColumn":20},{"ruleId":"164","severity":1,"message":"177","line":4,"column":22,"nodeType":"166","messageId":"167","endLine":4,"endColumn":27},{"ruleId":"164","severity":1,"message":"178","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":14},{"ruleId":"164","severity":1,"message":"176","line":3,"column":17,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"161","severity":1,"message":"179","line":60,"column":21,"nodeType":"163","endLine":60,"endColumn":24},{"ruleId":"161","severity":1,"message":"179","line":61,"column":21,"nodeType":"163","endLine":61,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":10,"column":1,"nodeType":"157","endLine":19,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":12,"column":34,"nodeType":"153","messageId":"160","endLine":12,"endColumn":35},{"ruleId":"164","severity":1,"message":"180","line":15,"column":16,"nodeType":"166","messageId":"167","endLine":15,"endColumn":20},{"ruleId":"164","severity":1,"message":"181","line":15,"column":21,"nodeType":"166","messageId":"167","endLine":15,"endColumn":25},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'propTypes' is defined but never used.","Identifier","unusedVar","'defaults' is defined but never used.",["182"],["183"],"'Button' is defined but never used.","'SubMenu' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Tag' is defined but never used.","'Space' is defined but never used.","'func' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'page' is assigned a value but never used.","'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]